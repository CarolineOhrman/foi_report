---
pagetitle: Sequencing of bacterial isolate
title: Genomic analysis for Bacteria
subtitle: Sequence Quality, assembly and more.
author: FOI-bioinformatics
date: 2025-06-17
categories:
  - fastqc
  - assembly
  - graphs
  - phylo
slug: patchwork
page-layout: full
image: ../assets/images/dna.jpg
---

# General statistics

```{r}
#| echo: false
#| message: false
#| warning: false

library(kableExtra)
library(dplyr)
library(tidyr)

# Simple FastQC parser
parse_fastqc <- function(file_path, read_type) {
  lines <- readLines(file_path)
  start_line <- which(grepl(">>Basic Statistics", lines))[1]
  end_line <- which(grepl(">>END_MODULE", lines))
  end_line <- end_line[end_line > start_line][1]

  status <- strsplit(lines[start_line], "\t")[[1]][2]
  data_section <- lines[(start_line + 2):(end_line - 1)]

  measures <- c("QC Status")
  values <- c(status)

  for (line in data_section) {
    if (!grepl("^#", line) && nchar(trimws(line)) > 0) {
      parts <- strsplit(line, "\t")[[1]]
      if (length(parts) >= 2) {
        measures <- c(measures, parts[1])
        values <- c(values, parts[2])
      }
    }
  }

  data.frame(
    Read = read_type,
    Measure = measures,
    Value = values,
    stringsAsFactors = FALSE
  )
}

# Read data and create table
r1_data <- parse_fastqc(
  "../results/fastqc/MI173C_fastp_R1_fastqc/fastqc_data.txt",
  "R1"
)
r2_data <- parse_fastqc(
  "../results/fastqc/MI173C_fastp_R2_fastqc/fastqc_data.txt",
  "R2"
)

table_data <- rbind(r1_data, r2_data) %>%
  pivot_wider(names_from = Read, values_from = Value)

# Create simple kable table
table_data %>%
  kable(
    caption = "FastQC Summary - Sample MI173C",
    col.names = c("Measure", "R1 (Forward)", "R2 (Reverse)"),
    align = c("l", "c", "c")
  ) %>%
  column_spec(1, width = "60%") %>% # Keep structural widths
  column_spec(2, width = "40%") %>%
  row_spec(
    c(5),
    extra_css = "font-weight: bold"
  ) # Use CSS variables
```
  
  # Assembly stats
  
  Write something here
  
```{r}
#| echo: false
#| message: false
#| warning: false

library(dplyr)
library(kableExtra)

# Read assembly statistics from TSV file
# Since qmd is in reports/ folder, go up one level to reach results/
file_path <- "../results/assembly/assembly_stats_final.tsv"

assembly_data <- read.table(
  file_path,
  header = TRUE,
  sep = "\t",
  stringsAsFactors = FALSE
)

# Use only the first row
assembly_data <- assembly_data[1, ]

# Extract sample name from filename
sample_name <- gsub(".*/(.*?)_.*", "\\1", basename(assembly_data$filename))

# Transform data into table format with proper labels
table_data <- data.frame(
  Statistic = c(
    "Sample",
    "Total Assembly Length",
    "Number of Contigs",
    "Mean Contig Length",
    "Longest Contig",
    "Shortest Contig",
    "N Count",
    "Gaps",
    "N50 Length",
    "N50 Count",
    "N70 Length",
    "N70 Count",
    "N90 Length",
    "N90 Count"
  ),
  Value = c(
    sample_name,
    paste(format(assembly_data$total_length, big.mark = ","), "bp"),
    as.character(assembly_data$number),
    paste(format(round(assembly_data$mean_length, 1), big.mark = ","), "bp"),
    paste(format(assembly_data$longest, big.mark = ","), "bp"),
    paste(format(assembly_data$shortest, big.mark = ","), "bp"),
    as.character(assembly_data$N_count),
    as.character(assembly_data$Gaps),
    paste(format(assembly_data$N50, big.mark = ","), "bp"),
    as.character(assembly_data$N50n),
    paste(format(assembly_data$N70, big.mark = ","), "bp"),
    as.character(assembly_data$N70n),
    paste(format(assembly_data$N90, big.mark = ","), "bp"),
    as.character(assembly_data$N90n)
  ),
  stringsAsFactors = FALSE
)

table_data %>%
  kable(
    caption = "Assembly Statistics - Sample MI173C",
    col.names = c("Statistic", "Value"),
    align = c("c", "c") # Keep alignment
  ) %>%
  column_spec(1, width = "60%") %>% # Keep structural widths
  column_spec(2, width = "40%") %>%
  row_spec(
    c(1, 2, 9),
    extra_css = "font-weight: bold"
  ) # Use CSS variables
```
